name: Dotfiles health check

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:

jobs:
  health:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Install All Major Dependencies
        shell: bash
        run: |
          set -e
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo bash scripts/install.sh
          else
            bash scripts/install.sh
          fi
      - name: Install LazyVim plugins
        shell: bash
        run: |
          nvim --headless \
            -c 'Lazy sync --no-color' \
            -c 'qa!'
      - name: Run Neovim healthcheck
        shell: bash
        run: |
          nvim --headless -c 'silent! checkhealth' -c 'noautocmd w! health.log' -c 'qa!'

          # Filter out expected CI environment errors that don't indicate real issues:
          # - Terminal emulators (kitty/wezterm/ghostty): CI runners don't have these installed
          # - Graphics protocol: CI environments don't support terminal graphics
          # - infocmp: CI terminals may have limited terminal info databases  
          # - Snacks UI errors: Expected in headless mode, plugins may not fully initialize
          # - "setup did not run" / "is not ready": Common in headless environments
          if grep -E 'ERROR|FAIL' health.log | grep -v -E "(kitty|wezterm|ghostty|graphics protocol|infocmp|vim\.ui\.(input|select)|Snacks\.(input|picker)|setup did not run|is not ready)"; then
            echo "::error ::Neovim healthcheck found unexpected ERROR or FAIL"
            echo "Full health log:"
            cat health.log
            exit 1
          else
            echo "âœ… Health check passed (filtered expected CI errors)"
            echo "Errors found but ignored (expected in CI environment):"
            grep -E 'ERROR|FAIL' health.log | head -10 || echo "No errors found"
          fi
